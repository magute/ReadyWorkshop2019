diff --git a/lab/BackEnd/Controllers/SessionsController.cs b/lab/BackEnd/Controllers/SessionsController.cs
index d887c5c..6b103b2 100644
--- a/lab/BackEnd/Controllers/SessionsController.cs
+++ b/lab/BackEnd/Controllers/SessionsController.cs
@@ -21,33 +21,29 @@ namespace BackEnd.Controllers
         }
 
         [HttpGet]
-        public ActionResult<List<SessionResponse>> Get()
+        public async Task<ActionResult<List<SessionResponse>>> Get()
         {
-            var sessions = _db.Sessions.AsNoTracking()
+            var sessions = await _db.Sessions.AsNoTracking()
                                              .Include(s => s.Track)
                                              .Include(s => s.SessionSpeakers)
                                                 .ThenInclude(ss => ss.Speaker)
                                              .Include(s => s.SessionTags)
                                                 .ThenInclude(st => st.Tag)
                                              .Select(m => m.MapSessionResponse())
-                                             .ToListAsync()
-                                             .GetAwaiter()
-                                             .GetResult();
+                                             .ToListAsync();
             return sessions;
         }
 
         [HttpGet("{id:int}")]
-        public ActionResult<SessionResponse> Get(int id)
+        public async Task<ActionResult<SessionResponse>> Get(int id)
         {
-            var session = _db.Sessions.AsNoTracking()
+            var session = await _db.Sessions.AsNoTracking()
                                             .Include(s => s.Track)
                                             .Include(s => s.SessionSpeakers)
                                                 .ThenInclude(ss => ss.Speaker)
                                             .Include(s => s.SessionTags)
                                                 .ThenInclude(st => st.Tag)
-                                            .SingleOrDefaultAsync(s => s.ID == id)
-                                            .GetAwaiter()
-                                            .GetResult();
+                                            .SingleOrDefaultAsync(s => s.ID == id);
 
             if (session == null)
             {
@@ -58,7 +54,7 @@ namespace BackEnd.Controllers
         }
 
         [HttpPost]
-        public ActionResult<SessionResponse> Post(ConferenceDTO.Session input)
+        public async Task<ActionResult<SessionResponse>> Post(ConferenceDTO.Session input)
         {
             var session = new Data.Session
             {
@@ -71,9 +67,7 @@ namespace BackEnd.Controllers
             };
 
             _db.Sessions.Add(session);
-            _db.SaveChangesAsync()
-                .GetAwaiter()
-                .GetResult();
+            await _db.SaveChangesAsync();
 
             var result = session.MapSessionResponse();
 
@@ -81,11 +75,9 @@ namespace BackEnd.Controllers
         }
 
         [HttpPut("{id:int}")]
-        public IActionResult Put(int id, ConferenceDTO.Session input)
+        public async Task<IActionResult> Put(int id, ConferenceDTO.Session input)
         {
-            var session = _db.Sessions.FindAsync(id)
-                                    .GetAwaiter()
-                                    .GetResult();
+            var session = await _db.Sessions.FindAsync(id);
 
             if (session == null)
             {
@@ -100,19 +92,15 @@ namespace BackEnd.Controllers
             session.TrackId = input.TrackId;
             session.ConferenceID = input.ConferenceID;
 
-            _db.SaveChangesAsync()
-                .GetAwaiter()
-                .GetResult();
+            await _db.SaveChangesAsync();
 
             return NoContent();
         }
 
         [HttpDelete("{id:int}")]
-        public ActionResult<SessionResponse> Delete(int id)
+        public async Task<ActionResult<SessionResponse>> Delete(int id)
         {
-            var session = _db.Sessions.FindAsync(id)
-                            .GetAwaiter()
-                            .GetResult();
+            var session = await _db.Sessions.FindAsync(id);
 
             if (session == null)
             {
@@ -120,9 +108,7 @@ namespace BackEnd.Controllers
             }
 
             _db.Sessions.Remove(session);
-            _db.SaveChangesAsync()
-                .GetAwaiter()
-                .GetResult();
+            await _db.SaveChangesAsync();
 
             return session.MapSessionResponse();
         }
